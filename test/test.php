<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
        <meta charset="utf-8">
        <title>Simple Polygon</title>
        <style>
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }
        </style>
    </head>
    <body>
        <?php
        require 'header.php';
        ?>
        <hr class="featurette-divider">
        <div class="container">
            <div class="col-lg-1"></div>
            <div class="col-lg-10">
                <div id="map" style="height: 700px; width: 100%"></div>
            </div>
            <div class="col-lg-1"></div>
        </div>
        <?php require 'footer.php'; ?>
        <script>
            var map;
            var data = "<?php require('test_for_php.php') ?>";
            // This example creates a simple polygon representing the Bermuda Triangle.

            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 8,
                    center: {lat: -37.8142, lng: 144.9632},
                    mapTypeId: google.maps.MapTypeId.TERRAIN
                });
                var lga = data.split("+");
                //var data2 = "-37.88386502 144.99705204, -37.88350142 144.99674515, -37.87691677 144.99800358, -37.86645509 145.00003579, -37.86708727 145.00515237, -37.86759616 145.009166, -37.86374548 145.00987834, -37.86136408 145.01032084, -37.8602253 145.01052136, -37.86084043 145.01513662, -37.8627244 145.01946651, -37.86627437 145.02757912, -37.8670398 145.02936622, -37.86753524 145.03020455, -37.86790524 145.03078782, -37.86801749 145.03094129, -37.86813238 145.03109164, -37.86819758 145.03117414, -37.86831091 145.03131373, -37.86833435 145.03133864, -37.86835531 145.03136687, -37.8683735 145.031398, -37.86838868 145.03143161, -37.86840063 145.03146724, -37.86840919 145.03150438, -37.86841422 145.03154253, -37.8684156899999 145.03158116, -37.86841355 145.03161975, -37.86840784 145.03165775, -37.86839864 145.03169465, -37.86838607 145.03172993, -37.86837031 145.0317631, -37.86836505 145.03177251, -37.86834152 145.03181469, -37.86832102 145.03185936, -37.86830371 145.03190612, -37.86828974 145.03195461, -37.86827921 145.03200448, -37.86827218 145.03205532, -37.86826873 145.03210674, -37.86826888 145.03215835, -37.86827264 145.03220973, -37.86827996 145.0322605, -37.86829078 145.03231026, -37.86830505 145.03235863, -37.86832262 145.03240522, -37.86834337 145.0324497, -37.86836715 145.03249169, -37.86839377 145.03253088, -37.86842302 145.03256697, -37.86846286 145.03260723, -37.87208889 145.03639209, -37.87290212 145.0372642, -37.87289795 145.03732183, -37.87373854 145.03826104, -37.87386418 145.03840291, -37.87406931 145.03862735, -37.87457965 145.03927633, -37.87510781 145.04015202, -37.87532902 145.0412807, -37.8755522 145.04319667, -37.87603308 145.04501901, -37.87621005 145.04545439, -37.87628292 145.04557989, -37.87639986 145.04577501, -37.87651965 145.04596738, -37.87656275 145.04602617, -37.87665677 145.04614955, -37.87675335 145.04626973, -37.87685243 145.04638665, -37.87693243 145.04647767, -37.87701487 145.04656539, -37.87709959 145.04664957, -37.87718648 145.04673014, -37.87727547 145.046807, -37.87736644 145.04688006, -37.8784242 145.04770393, -37.88130132 145.04984044, -37.88140933 145.04993362, -37.88151526 145.05003052, -37.88161904 145.05013106, -37.88172059 145.05023517, -37.88181983 145.05034276, -37.88191668 145.05045377, -37.88201107 145.0505681, -37.88210293 145.05068566, -37.88219218 145.05080638, -37.88227877 145.05093015, -37.88236263 145.05105687, -37.88244368 145.05118647, -37.88252188 145.05131884, -37.88259715 145.05145387, -37.88266945 145.05159146, -37.88273872 145.05173152, -37.88280491 145.05187393, -37.88286796 145.05201859, -37.88292783 145.05216538, -37.88298448 145.05231419, -37.88303785 145.05246492, -37.88308792 145.05261745, -37.88313463 145.05277166, -37.88317796 145.05292743, -37.88321788 145.05308465, -37.8832399 145.05317847, -37.8832723 145.05333035, -37.8833012 145.05348337, -37.88332659 145.05363739, -37.88333843 145.05371815, -37.88397755 145.05805613, -37.88464677 145.06263933, -37.88465451 145.06270729, -37.88467265 145.06288836, -37.88468719 145.06306998, -37.88471372 145.0636943, -37.88459926 145.06998189, -37.88460936 145.07050593, -37.88462178 145.07065661, -37.88463779 145.07080675, -37.88465735 145.07095621, -37.88468047 145.07110487, -37.8847071 145.07125259, -37.88473724 145.07139923, -37.88477085 145.07154466, -37.8848079099999 145.07168875, -37.88484837 145.07183138, -37.88489222 145.07197241, -37.88493939 145.07211172, -37.88499703 145.07226788, -37.88633533 145.07590227, -37.88674783 145.07702462, -37.8871519 145.07818255, -37.88788351 145.07804458, -37.88805165 145.07799035, -37.89168247 145.07729428, -37.8942846 145.07681355, -37.89601556 145.07648594, -37.89845948 145.07602235, -37.90120582 145.07552459, -37.90540279 145.07474472, -37.908145 145.0742074, -37.9083841 145.07618269, -37.90851721 145.07725653, -37.90951477 145.08530643, -37.91628408 145.08397048, -37.9201709 145.08317557, -37.92399779 145.08247563, -37.92399223 145.08243389, -37.93014887 145.08122571, -37.93028206 145.08120245, -37.93206971 145.0808902, -37.93709388 145.0799836, -37.93709212 145.07987612, -37.93783353 145.07973545, -37.93875232 145.07953336, -37.93863487 145.07827909, -37.93836089 145.07652575, -37.93782827 145.07342333, -37.93754316 145.07120098, -37.93752965 145.0710757, -37.9373933 145.06856688, -37.9369755 145.06564798, -37.93644981 145.06141978, -37.93588741 145.05679565, -37.93576834 145.05623938, -37.93551121 145.05489536, -37.93440878 145.04605636, -37.9340516 145.04298537, -37.93366509 145.03999921, -37.93302807 145.03440114, -37.93302712 145.03439275, -37.93010765 145.03171758, -37.92828557 145.02985963, -37.92558951 145.02718465, -37.92282049 145.02461573, -37.92061192 145.02245805, -37.91659044 145.02323379, -37.91481678 145.02353344, -37.91470275 145.0235531, -37.90939159 145.02444591, -37.90936433 145.02445577, -37.90933827 145.0244699, -37.90931384 145.02448809, -37.90929143 145.02451004, -37.9092714 145.0245354, -37.90925409 145.02456375, -37.90923704 145.02460172, -37.90922638 145.02462951, -37.9092126 145.02465505, -37.90919601 145.02467776, -37.90917695 145.02469715, -37.90915585 145.02471281, -37.90913316 145.0247244, -37.90910903 145.02473175, -37.90700525 145.0251022, -37.90216533 145.02598778, -37.90135595 145.01918493, -37.89982062 145.00632168, -37.89974823 145.00629983, -37.89817439 145.00595419, -37.89760803 145.00566304, -37.88858906 145.00103804, -37.88858745 145.00103834, -37.88386502 144.99705204";
                // Seperate LGA Name and Polygon
                var nameOfLgas = [];
                var coordOfLgas = [];
                for (var a = 0; a < lga.length - 1; a++) {
                    var splitLga = lga[a].split("|");
                    nameOfLgas[a] = splitLga[0];
                    coordOfLgas[a] = splitLga[1];
                    var coord = coordOfLgas[a].split(",");
                    var lati = [];
                    var longi = [];
                    var latiDbl = [];
                    var longiDbl = [];
                    for (var i = 0; i < coord.length; i++) {
                        coord[i] = trim(coord[i]);
                        var oneCoord = coord[i].split(" ");
                        lati[i] = oneCoord[0];
                        longi[i] = oneCoord[1];
                        latiDbl[i] = parseFloat(lati[i]);
                        longiDbl[i] = parseFloat(longi[i]);
                    }

                    var triangleCoords = [];
                    for (var j = 0; j < coord.length; j++) {
                        triangleCoords.push({lat: latiDbl[j], lng: longiDbl[j]});
                    }

                    // Construct the polygon.
                    var localAreaPolygon = new google.maps.Polygon({
                        paths: triangleCoords,
                        strokeColor: 'black',
                        strokeOpacity: 0.8,
                        strokeWeight: 2,
                        //fillColor: 'transparent',
                        fillColor: 'blue',
                        fillOpacity: 0.35
                    });
                    localAreaPolygon.setMap(map);
                }
            }
            
            //Remove space
            function trim(str) {
                return str.replace(/(^\s+)|(\s+$)/g, "");
            }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?callback=initMap"></script>
        <script src="js/jquery.min.js"></script>
        <!-- Latest compiled and minified JavaScript -->
        <script src="js/bootstrap.min.js"></script>
    </body>
</html>